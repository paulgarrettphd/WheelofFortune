install.packages(c('ggplot2','dplyr','psych','lmr','tidyr','tidyverse,'stats','broom','gapminder'), dependencies = TRUE, repos='http://cran.rstudio.com/')
install.packages(c('ggplot2','dplyr','psych','lmr','tidyr','tidyverse,'stats','broom'','gapminder'), dependencies = TRUE, repos='http://cran.rstudio.com/')
install.packages(c('ggplot2','dplyr','psych','lmr','tidyr','tidyverse,'stats','broom','gapminder'), dependencies = TRUE, repos='http://cran.rstudio.com/')
install.packages(c('ggplot2','dplyr','psych','lmr','tidyr','tidyverse'), dependencies = TRUE, repos='http://cran.rstudio.com/')
library(sft)
require(sft)
install.packages("sft")
library(sft)
install.packages(c("rstan", "rstudioapi", "ggplot2", "StanHeaders"))
setwd('C:\\Users\\c3130234\\Desktop\\SubitizingChapter\\HeirBayesSubitizing\\CritThree\\Ex2\\')
install.packages("multiway")
library(multiway)
setwd('C:\Users\c3130234\Desktop\MDS Analysis Paper\Analysis\Indscal Analysis')
setwd("'"C:\Users\c3130234\Desktop\MDS Analysis Paper\Analysis\Indscal Analysis")
setwd("C:\Users\c3130234\Desktop\MDS Analysis Paper\Analysis\Indscal Analysis")
setwd("C:\\Users\c3130234\Desktop\MDS Analysis Paper\Analysis\Indscal Analysis")
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
install.packages("R.matlab")
library(R.matlab)
R.matlab::readMat(ThreeDimMDS.mat)
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
R.matlab::readMat("ThreeDimMDS.mat")
x = R.matlab::readMat("ThreeDimMDS.mat")
View(x)
View(x)
M = x{M}
x$M
M = x$M
x = R.matlab::readMat("ThreeDimMDS.mat")$M
library(R.matlab)
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
x = R.matlab::readMat("ThreeDimMDS.mat")$M
x
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
M = R.matlab::readMat("ThreeDimMDS.mat")$M
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_ENG.mat")$Cmatrix
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_ENG.mat")$Cmatrix
DOT = R.matlab::readMat("UnbiasMDS_DOT.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_THI.mat")$Cmatrix
x = multiway::indscal(ENG, 2)
x
Xhat <- fitted(x)
Xhat
x$B
x$C
multiway::const.control()
multiway::const.control
multiway::indscal(ENG, 2)$B
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_ENG.mat")$Cmatrix
DOT = R.matlab::readMat("UnbiasMDS_DOT.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_THI.mat")$Cmatrix
# Generate Unconstrained MDS (model B)
ENGmds = multiway::indscal(ENG, 2)$B
DOTmds = multiway::indscal(DOT, 2)$B
CHNmds = multiway::indscal(CHN, 2)$B
THImds = multiway::indscal(THI, 2)$B
DOTmds
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_ENG.mat")$Cmatrix
DOT = R.matlab::readMat("UnbiasMDS_DOT.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_THI.mat")$Cmatrix
# Generate Unconstrained MDS (model B)
ENGmds = multiway::indscal(ENG, 2)$B
DOTmds = multiway::indscal(DOT, 2)$B
CHNmds = multiway::indscal(CHN, 2)$B
THImds = multiway::indscal(THI, 2)$B
write.csv(ENGmds, file = "Rdata_ENGindscal.csv")
write.csv(DOTmds, file = "Rdata_DOTindscal.csv")
write.csv(CHNmds, file = "Rdata_CHNindscal.csv")
write.csv(THImds, file = "Rdata_THIindscal.csv")
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_ENG.mat")$Cmatrix
DOT = R.matlab::readMat("UnbiasMDS_DOT.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_THI.mat")$Cmatrix
# Generate Unconstrained MDS (model B)
ENGmds = multiway::indscal(ENG, 2)$B
DOTmds = multiway::indscal(DOT, 2)$B
CHNmds = multiway::indscal(CHN, 2)$B
THImds = multiway::indscal(THI, 2)$B
#write.csv(ENGmds, file = "Rdata_ENGindscal.csv")
#write.csv(DOTmds, file = "Rdata_DOTindscal.csv")
#write.csv(CHNmds, file = "Rdata_CHNindscal.csv")
#write.csv(THImds, file = "Rdata_THIindscal.csv")
ENGmdsALL = multiway::indscal(ENG, 2)
DOTmdsALL = multiway::indscal(DOT, 2)
CHNmdsALL = multiway::indscal(CHN, 2)
THImdsALL = multiway::indscal(THI, 2)
ENGmdsALL$Rsq
ENGmdsALL$B
ENGmdsALL$cflag
fitted.indscal(ENGmodALL)
fitted.indscal(ENGmdsALL)
x = fitted.indscal(ENGmdsALL)
x
ENGmdsALL$SSE
CHNmdsALL$SSE
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_3D_ENG.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_3D_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_3D_THI.mat")$Cmatrix
# Generate Unconstrained MDS (model B)
ENGmds = multiway::indscal(ENG, 3)$B
CHNmds = multiway::indscal(CHN, 3)$B
THImds = multiway::indscal(THI, 3)$B
#write.csv(ENGmds, file = "Rdata_ENGindscal.csv")
#write.csv(DOTmds, file = "Rdata_DOTindscal.csv")
#write.csv(CHNmds, file = "Rdata_CHNindscal.csv")
#write.csv(THImds, file = "Rdata_THIindscal.csv")
#ENGmdsALL = multiway::indscal(ENG, 2)
#CHNmdsALL = multiway::indscal(CHN, 2)
#THImdsALL = multiway::indscal(THI, 2)
rm(list=ls())
setwd("C:\\Users\\c3130234\\Desktop\\MDS Analysis Paper\\Analysis\\Indscal Analysis")
library(R.matlab)
library(multiway)
ENG = R.matlab::readMat("UnbiasMDS_3D_ENG.mat")$Cmatrix
CHN = R.matlab::readMat("UnbiasMDS_3D_CHN.mat")$Cmatrix
THI = R.matlab::readMat("UnbiasMDS_3D_THI.mat")$Cmatrix
# Generate Unconstrained MDS (model B)
ENGmds = multiway::indscal(ENG, 3)$B
CHNmds = multiway::indscal(CHN, 3)$B
THImds = multiway::indscal(THI, 3)$B
write.csv(ENGmds, file = "Rdata_3D_ENGindscal.csv")
#write.csv(DOTmds, file = "Rdata_3D_DOTindscal.csv")
write.csv(CHNmds, file = "Rdata_3D_CHNindscal.csv")
write.csv(THImds, file = "Rdata_3D_THIindscal.csv")
#ENGmdsALL = multiway::indscal(ENG, 2)
#CHNmdsALL = multiway::indscal(CHN, 2)
#THImdsALL = multiway::indscal(THI, 2)
